{"version":3,"file":"forum.js","sources":["../src/forum/components/UserSubmissionApplicationSubmitSuccessModal.tsx","../src/types/index.ts","../src/forum/services/UserSubmissionAPI.ts","../src/forum/components/UserSubmissionApplicationModal.tsx","../src/forum/components/UserSubmissionWidget.tsx","../src/forum/model/UserSubmission.ts","../src/forum/components/UserSubmissionApplicationListItem.tsx","../src/forum/components/UserSubmissionApplicationListPage.tsx","../src/forum/components/UserSubmissionApplicationPage.tsx","../src/forum/addUserPage.tsx","../src/forum/components/UserSubmissionNotification.tsx","../src/forum/components/UserSubmissionIndexPage.tsx","../src/forum/index.ts"],"sourcesContent":["import app from 'flarum/forum/app';\r\nimport Modal from 'flarum/common/components/Modal';\r\nimport Button from 'flarum/common/components/Button';\r\n\r\nexport default class UserSubmissionApplicationSubmitSuccessModal extends Modal {\r\n  static isDismissible = true;\r\n\r\n  className() {\r\n    return 'Modal--small';\r\n  }\r\n\r\n  title() {\r\n    return app.translator.trans('wusong8899-user-submission.forum.submit-success');\r\n  }\r\n\r\n  content() {\r\n    return (\r\n      <div className=\"Modal-body\">\r\n        <div className=\"Form\">\r\n          <div className=\"Form-group\" style={{ textAlign: 'center' }}>\r\n            <Button\r\n              className=\"Button Button--primary\"\r\n              onclick={() => app.modal.close()}\r\n            >\r\n              {app.translator.trans('wusong8899-user-submission.lib.ok')}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import User from 'flarum/models/User';\n\n/**\n * Review result type - strictly typed enum\n */\nexport type UserSubmissionReviewResult = 'approved' | 'rejected';\n\n/**\n * Review status type including pending state\n */\nexport type UserSubmissionReviewStatus = 'pending' | 'approved' | 'rejected';\n\n/**\n * Enhanced User Submission model interface with strict typing\n */\nexport interface UserSubmissionAttributes {\n  readonly id: string;\n  amount: number;\n  user_account: string;\n  submission_user_id: string;\n  review_user_id: string | null;\n  review_result: UserSubmissionReviewResult | null;\n  assigned_at: Date;\n  reviewed_at: Date | null;\n  created_at: Date;\n  updated_at: Date;\n}\n\n/**\n * User Submission model with relationships\n */\nexport interface UserSubmissionData extends UserSubmissionAttributes {\n  fromUser: User;\n  reviewUser: User | null;\n}\n\n/**\n * API response for user submission list\n */\nexport interface UserSubmissionListResponse {\n  data: UserSubmissionData[];\n  meta?: {\n    total: number;\n    page: number;\n    per_page: number;\n  };\n}\n\n/**\n * API request payload for creating user submission\n */\nexport interface CreateUserSubmissionPayload {\n  amount: number;\n  userAccount: string;\n}\n\n/**\n * API request payload for updating user submission with strict typing\n */\nexport interface UpdateUserSubmissionPayload {\n  review_result?: UserSubmissionReviewResult;\n  review_user_id?: string;\n}\n\n/**\n * Component props for modals\n */\nexport interface ModalProps {\n  onsubmit?: () => void;\n  onhide?: () => void;\n}\n\n/**\n * Component props for user submission components\n */\nexport interface UserSubmissionComponentProps {\n  userSubmission: UserSubmissionData;\n  onUpdate?: (userSubmission: UserSubmissionData) => void;\n  onDelete?: (id: string) => void;\n}\n\n/**\n * Stream type for form inputs\n */\nexport type StreamType<T> = {\n  (): T;\n  (value: T): T;\n};\n\n/**\n * Form state interface\n */\nexport interface UserSubmissionFormState {\n  amount: StreamType<string>;\n  userAccount: StreamType<string>;\n  loading: boolean;\n}\n\n/**\n * Review modal state interface with strict typing\n */\nexport interface ReviewModalState {\n  reviewResult: StreamType<UserSubmissionReviewResult | ''>;\n  loading: boolean;\n}\n\n/**\n * Enhanced API response wrapper with error handling\n */\nexport interface ApiResponse<T = any> {\n  data: T;\n  meta?: MetaInformation;\n  errors?: ApiError[];\n}\n\n/**\n * Standardized API error interface\n */\nexport interface ApiError {\n  status: string;\n  code?: string;\n  title: string;\n  detail?: string;\n  source?: {\n    pointer?: string;\n    parameter?: string;\n  };\n}\n\n/**\n * Meta information from API responses\n */\nexport interface MetaInformation {\n  total?: number;\n  page?: number;\n  per_page?: number;\n  [key: string]: any;\n}\n\n/**\n * Validation error type for forms\n */\nexport interface ValidationError {\n  field: string;\n  message: string;\n}\n\n/**\n * Enhanced UserSubmission service interface\n */\nexport interface UserSubmissionService {\n  list(params?: ListParams): Promise<UserSubmissionListResponse>;\n  create(payload: CreateUserSubmissionPayload): Promise<UserSubmissionData>;\n  update(id: string, payload: UpdateUserSubmissionPayload): Promise<UserSubmissionData>;\n  delete(id: string): Promise<void>;\n  validate(data: Partial<CreateUserSubmissionPayload>): ValidationError[];\n}\n\n/**\n * List parameters for API queries\n */\nexport interface ListParams {\n  page?: number;\n  limit?: number;\n  filter?: Record<string, any>;\n  sort?: string;\n  include?: string[];\n}\n\n/**\n * Constants for user submission system\n */\nexport const USER_SUBMISSION_CONSTANTS = {\n  REVIEW_RESULTS: {\n    APPROVED: 'approved' as const,\n    REJECTED: 'rejected' as const,\n  },\n  REVIEW_STATUSES: {\n    PENDING: 'pending' as const,\n    APPROVED: 'approved' as const,\n    REJECTED: 'rejected' as const,\n  },\n  VALIDATION_RULES: {\n    MIN_AMOUNT: 0.01,\n    MAX_AMOUNT: 999999.99,\n    MAX_USER_ACCOUNT_LENGTH: 500,\n  },\n  ERROR_CODES: {\n    SUBMISSION_IN_REVIEW: 'submission_in_review',\n    INVALID_AMOUNT: 'invalid_amount',\n    INVALID_ACCOUNT: 'invalid_account',\n    UNAUTHORIZED: 'unauthorized',\n    NOT_FOUND: 'not_found',\n  }\n} as const;\n","import app from 'flarum/forum/app';\r\nimport {\r\n  UserSubmissionData,\r\n  UserSubmissionListResponse,\r\n  CreateUserSubmissionPayload,\r\n  UpdateUserSubmissionPayload,\r\n  ListParams,\r\n  ValidationError,\r\n  USER_SUBMISSION_CONSTANTS\r\n} from '../../types';\r\n\r\n// Constants for the API module\r\nconst BASE_ENDPOINT = '/api/userSubmissionList';\r\nconst APPLICATION_ENDPOINT = '/api/userSubmissionApplicationList';\r\nconst MAX_RETRIES = 3;\r\nconst RETRY_DELAY = 1000; // milliseconds\r\n\r\n/**\r\n * List user submissions with advanced filtering and pagination\r\n */\r\nexport async function listUserSubmissions(params: ListParams = {}): Promise<UserSubmissionListResponse> {\r\n  try {\r\n    const queryParams = buildQueryParams(params);\r\n    const response = await requestWithRetry(\r\n      'GET',\r\n      `${BASE_ENDPOINT}${queryParams ? `?${queryParams}` : ''}`\r\n    );\r\n    \r\n    return processListResponse(response);\r\n  } catch (error) {\r\n    throw handleApiError(error, 'Failed to fetch user submissions');\r\n  }\r\n}\r\n\r\n/**\r\n * Get user applications list\r\n */\r\nexport async function listUserApplications(params: ListParams = {}): Promise<UserSubmissionListResponse> {\r\n  try {\r\n    const queryParams = buildQueryParams(params);\r\n    const response = await requestWithRetry(\r\n      'GET',\r\n      `${APPLICATION_ENDPOINT}${queryParams ? `?${queryParams}` : ''}`\r\n    );\r\n    \r\n    return processListResponse(response);\r\n  } catch (error) {\r\n    throw handleApiError(error, 'Failed to fetch user applications');\r\n  }\r\n}\r\n\r\n/**\r\n * Create a new user submission with comprehensive validation\r\n */\r\nexport async function createUserSubmission(payload: CreateUserSubmissionPayload): Promise<UserSubmissionData> {\r\n  try {\r\n    // Client-side validation\r\n    const validationErrors = validateCreatePayload(payload);\r\n    if (validationErrors.length > 0) {\r\n      throw new Error(validationErrors.map(err => err.message).join(', '));\r\n    }\r\n\r\n    const response = await requestWithRetry('POST', BASE_ENDPOINT, {\r\n      data: {\r\n        type: 'userSubmissionList',\r\n        attributes: payload\r\n      }\r\n    });\r\n\r\n    return processCreateResponse(response);\r\n  } catch (error) {\r\n    throw handleApiError(error, 'Failed to create user submission');\r\n  }\r\n}\r\n\r\n/**\r\n * Update an existing user submission\r\n */\r\nexport async function updateUserSubmission(id: string, payload: UpdateUserSubmissionPayload): Promise<UserSubmissionData> {\r\n  try {\r\n    if (!id) {\r\n      throw new Error('Submission ID is required');\r\n    }\r\n\r\n    const response = await requestWithRetry('PATCH', `${BASE_ENDPOINT}/${id}`, {\r\n      data: {\r\n        type: 'userSubmissionList',\r\n        id,\r\n        attributes: payload\r\n      }\r\n    });\r\n\r\n    return processUpdateResponse(response);\r\n  } catch (error) {\r\n    throw handleApiError(error, 'Failed to update user submission');\r\n  }\r\n}\r\n\r\n/**\r\n * Delete a user submission\r\n */\r\nexport async function deleteUserSubmission(id: string): Promise<void> {\r\n  try {\r\n    if (!id) {\r\n      throw new Error('Submission ID is required');\r\n    }\r\n\r\n    await requestWithRetry('DELETE', `${BASE_ENDPOINT}/${id}`);\r\n  } catch (error) {\r\n    throw handleApiError(error, 'Failed to delete user submission');\r\n  }\r\n}\r\n\r\n/**\r\n * Validate create payload on client side\r\n */\r\nexport function validateCreatePayload(payload: CreateUserSubmissionPayload): ValidationError[] {\r\n    const errors: ValidationError[] = [];\r\n    const { VALIDATION_RULES, ERROR_CODES } = USER_SUBMISSION_CONSTANTS;\r\n\r\n    // Amount validation\r\n    if (!payload.amount || payload.amount < VALIDATION_RULES.MIN_AMOUNT) {\r\n      errors.push({\r\n        field: 'amount',\r\n        message: app.translator.trans(`wusong8899-user-submission.lib.error.${ERROR_CODES.INVALID_AMOUNT}`)\r\n      });\r\n    }\r\n\r\n    if (payload.amount > VALIDATION_RULES.MAX_AMOUNT) {\r\n      errors.push({\r\n        field: 'amount',\r\n        message: app.translator.trans(`wusong8899-user-submission.lib.error.amount_too_large`)\r\n      });\r\n    }\r\n\r\n    // User account validation\r\n    if (!payload.userAccount || payload.userAccount.trim().length === 0) {\r\n      errors.push({\r\n        field: 'userAccount',\r\n        message: app.translator.trans(`wusong8899-user-submission.lib.error.user_account_required`)\r\n      });\r\n    }\r\n\r\n    if (payload.userAccount && payload.userAccount.length > VALIDATION_RULES.MAX_USER_ACCOUNT_LENGTH) {\r\n      errors.push({\r\n        field: 'userAccount',\r\n        message: app.translator.trans(`wusong8899-user-submission.lib.error.user_account_too_long`)\r\n      });\r\n    }\r\n\r\n    return errors;\r\n  }\r\n\r\n/**\r\n * Build query parameters for list requests\r\n */\r\nfunction buildQueryParams(params: ListParams): string {\r\n    const queryParams = new URLSearchParams();\r\n\r\n    if (params.page) queryParams.append('page', params.page.toString());\r\n    if (params.limit) queryParams.append('limit', params.limit.toString());\r\n    if (params.sort) queryParams.append('sort', params.sort);\r\n    if (params.include) queryParams.append('include', params.include.join(','));\r\n    \r\n    if (params.filter) {\r\n      Object.entries(params.filter).forEach(([key, value]) => {\r\n        queryParams.append(`filter[${key}]`, String(value));\r\n      });\r\n    }\r\n\r\n    return queryParams.toString();\r\n  }\r\n\r\n/**\r\n * Make API request with retry logic and enhanced error handling\r\n */\r\nasync function requestWithRetry(\r\n    method: string,\r\n    url: string,\r\n    data?: any,\r\n    retryCount = 0\r\n  ): Promise<any> {\r\n    try {\r\n      const response = await app.request({\r\n        method,\r\n        url,\r\n        body: data,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n        },\r\n      });\r\n\r\n      return response;\r\n    } catch (error: any) {\r\n      // Retry logic for network errors\r\n      if (retryCount < MAX_RETRIES && shouldRetry(error)) {\r\n        await delay(RETRY_DELAY * Math.pow(2, retryCount)); // Exponential backoff\r\n        return requestWithRetry(method, url, data, retryCount + 1);\r\n      }\r\n\r\n      throw error;\r\n    }\r\n  }\r\n\r\n/**\r\n * Determine if error should trigger a retry\r\n */\r\nfunction shouldRetry(error: any): boolean {\r\n    // Retry on network errors, timeouts, and 5xx server errors\r\n    if (!error.status) return true; // Network error\r\n    return error.status >= 500 && error.status < 600;\r\n  }\r\n\r\n/**\r\n * Delay helper for retry logic\r\n */\r\nfunction delay(ms: number): Promise<void> {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n/**\r\n * Process list response and ensure proper typing\r\n */\r\nfunction processListResponse(response: any): UserSubmissionListResponse {\r\n    // Push to store for automatic model hydration\r\n    if (response && Array.isArray(response.data)) {\r\n      response.data.forEach((item: any) => {\r\n        app.store.pushPayload({ data: item });\r\n      });\r\n    }\r\n\r\n    return {\r\n      data: response.data || [],\r\n      meta: response.meta || {}\r\n    };\r\n  }\r\n\r\n/**\r\n * Process create response\r\n */\r\nfunction processCreateResponse(response: any): UserSubmissionData {\r\n    if (response && response.data) {\r\n      app.store.pushPayload(response);\r\n      return response.data;\r\n    }\r\n    throw new Error('Invalid create response format');\r\n  }\r\n\r\n/**\r\n * Process update response\r\n */\r\nfunction processUpdateResponse(response: any): UserSubmissionData {\r\n    if (response && response.data) {\r\n      app.store.pushPayload(response);\r\n      return response.data;\r\n    }\r\n    throw new Error('Invalid update response format');\r\n  }\r\n\r\n/**\r\n * Enhanced error handling with user-friendly messages\r\n */\r\nfunction handleApiError(error: any, defaultMessage: string): Error {\r\n\r\n    // Handle validation errors from server\r\n    if (error.status === 422 && error.errors) {\r\n      const validationMessages = error.errors\r\n        .map((err: any) => err.detail || err.title)\r\n        .join(', ');\r\n      return new Error(validationMessages);\r\n    }\r\n\r\n    // Handle common HTTP status codes\r\n    switch (error.status) {\r\n      case 401:\r\n        return new Error(app.translator.trans('wusong8899-user-submission.lib.error.unauthorized'));\r\n      case 403:\r\n        return new Error(app.translator.trans('wusong8899-user-submission.lib.error.forbidden'));\r\n      case 404:\r\n        return new Error(app.translator.trans('wusong8899-user-submission.lib.error.not_found'));\r\n      case 429:\r\n        return new Error(app.translator.trans('wusong8899-user-submission.lib.error.rate_limited'));\r\n      case 500:\r\n        return new Error(app.translator.trans('wusong8899-user-submission.lib.error.server_error'));\r\n      default:\r\n        return new Error(error.message || defaultMessage);\r\n    }\r\n  }\r\n\r\n// Export a default object with all functions for backward compatibility\r\nexport default {\r\n  list: listUserSubmissions,\r\n  listApplications: listUserApplications,\r\n  create: createUserSubmission,\r\n  update: updateUserSubmission,\r\n  delete: deleteUserSubmission,\r\n  validate: validateCreatePayload\r\n};","import app from 'flarum/forum/app';\r\nimport Modal from 'flarum/common/components/Modal';\r\nimport Stream from 'flarum/common/utils/Stream';\r\nimport Button from 'flarum/common/components/Button';\r\nimport UserSubmissionApplicationSubmitSuccessModal from './UserSubmissionApplicationSubmitSuccessModal';\r\nimport { createUserSubmission } from '../services/UserSubmissionAPI';\r\nimport { StreamType, CreateUserSubmissionPayload } from '../../types';\r\nimport m from 'mithril';\r\n\r\n/**\r\n * Enhanced User Submission Application Modal with modern API integration\r\n */\r\nexport default class UserSubmissionApplicationModal extends Modal {\r\n  static isDismissibleViaBackdropClick = false;\r\n  static isDismissibleViaCloseButton = true;\r\n\r\n  private loading: boolean = false;\r\n  private error: string | null = null;\r\n  private amount: StreamType<string>;\r\n  private userAccount: StreamType<string>;\r\n\r\n  oninit(vnode: any) {\r\n    super.oninit(vnode);\r\n    this.loading = false;\r\n    this.error = null;\r\n\r\n    this.amount = Stream(\"\");\r\n    this.userAccount = Stream(\"\");\r\n  }\r\n\r\n  className(): string {\r\n    return 'Modal--small';\r\n  }\r\n\r\n  title(): string {\r\n    return app.translator.trans('wusong8899-user-submission.forum.item-header');\r\n  }\r\n\r\n  content() {\r\n    return (\r\n      <div className=\"Modal-body\">\r\n        <div className=\"Form\">\r\n          {this.error && (\r\n            <div className=\"Alert Alert--danger\">\r\n              <div className=\"Alert-body\">\r\n                {this.error}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"Form-group user-submission-modal__form-group\">\r\n              <div>\r\n                <div className=\"userSubmissionDataLabel\">{app.translator.trans('wusong8899-user-submission.lib.list-amount')}</div>\r\n                <input \r\n                  type=\"number\" \r\n                  min=\"0\" \r\n                  step=\"0.01\"\r\n                  disabled={this.loading} \r\n                  required \r\n                  className={`FormControl ${this.error && this.error.includes('amount') ? 'FormControl--error' : ''}`}\r\n                  bidi={this.amount} \r\n                />\r\n              </div>\r\n\r\n              <div className=\"userSubmissionDataLabel\">{app.translator.trans('wusong8899-user-submission.lib.list-userAccountFull')}</div>\r\n              <input \r\n                maxLength=\"500\" \r\n                disabled={this.loading} \r\n                required \r\n                className={`FormControl ${this.error && this.error.includes('userAccount') ? 'FormControl--error' : ''}`}\r\n                bidi={this.userAccount} \r\n              />\r\n          </div>\r\n\r\n          <div className=\"Form-group user-submission-modal__form-group\">\r\n            <Button\r\n              className=\"Button Button--primary user-submission-modal__button\"\r\n              type=\"submit\"\r\n              loading={this.loading}\r\n            >\r\n              {app.translator.trans('wusong8899-user-submission.lib.ok')}\r\n            </Button>\r\n            <Button\r\n              className=\"Button user-submission-modal__button\"\r\n              disabled={this.loading}\r\n              onclick={() => {\r\n                this.hide();\r\n              }}\r\n            >\r\n              {app.translator.trans('wusong8899-user-submission.lib.cancel')}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Enhanced form submission with comprehensive error handling\r\n   */\r\n  async onsubmit(e: Event): Promise<void> {\r\n    e.preventDefault();\r\n\r\n    // Clear previous errors\r\n    this.error = null;\r\n    this.loading = true;\r\n    m.redraw();\r\n\r\n    try {\r\n      // Prepare payload with proper typing\r\n      const payload: CreateUserSubmissionPayload = {\r\n        amount: parseFloat(this.amount()) || 0,\r\n        userAccount: this.userAccount().trim()\r\n      };\r\n\r\n      // Create submission using unified API\r\n      await createUserSubmission(payload);\r\n\r\n      // Success - show success modal\r\n      this.loading = false;\r\n      this.hide();\r\n      app.modal.show(UserSubmissionApplicationSubmitSuccessModal);\r\n\r\n    } catch (error: any) {\r\n      // Handle errors gracefully\r\n      this.loading = false;\r\n      this.error = error.message || app.translator.trans('wusong8899-user-submission.lib.error.unknown');\r\n      \r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear form data\r\n   */\r\n  private clearForm(): void {\r\n    this.amount(\"\");\r\n    this.userAccount(\"\");\r\n    this.error = null;\r\n  }\r\n\r\n  /**\r\n   * Reset form to initial state\r\n   */\r\n  private resetForm(): void {\r\n    this.clearForm();\r\n    this.loading = false;\r\n  }\r\n}\r\n","import app from 'flarum/forum/app';\r\nimport Component, { ComponentAttrs } from 'flarum/common/Component';\r\nimport UserSubmissionApplicationModal from './UserSubmissionApplicationModal';\r\nimport LogInModal from 'flarum/forum/components/LogInModal';\r\nimport m from 'mithril';\r\n\r\ninterface UserSubmissionWidgetAttrs extends ComponentAttrs {}\r\n\r\n/**\r\n * Modernized Widget component for user submission application\r\n * Uses single rendering path with DOM manipulation for better maintainability\r\n */\r\nexport default class UserSubmissionWidget extends Component<UserSubmissionWidgetAttrs> {\r\n  private static readonly POLL_INTERVAL = 10; // milliseconds\r\n  private static readonly WIDGET_CLASS = 'UserSubmissionApplication';\r\n  private static readonly CONTAINER_SELECTOR = '.swiperTagContainer'; // 当使用 flarum-header-advertisement ，改为splideTagContainer\r\n  \r\n  private widgetElement?: HTMLElement;\r\n\r\n  oncreate(vnode: any) {\r\n    super.oncreate(vnode);\r\n    this.setupDynamicWidget();\r\n  }\r\n\r\n  onremove() {\r\n    // Cleanup dynamic widget when component is removed\r\n    if (this.widgetElement) {\r\n      this.widgetElement.remove();\r\n    }\r\n  }\r\n\r\n  view() {\r\n    // This view method is for potential direct usage\r\n    return this.renderWidgetContent();\r\n  }\r\n\r\n  /**\r\n   * Unified widget content rendering using JSX\r\n   */\r\n  private renderWidgetContent() {\r\n    return (\r\n      <div className=\"user-submission-widget\">\r\n        <div className=\"user-submission-header\">\r\n          <img \r\n            className=\"user-submission-icon\"\r\n            src=\"https://i.mji.rip/2025/08/15/102ee6e187aa177ddfe02364dc82208d.png\" \r\n            alt=\"User Submission\"\r\n          />\r\n          <span className=\"user-submission-title\">\r\n            {app.translator.trans(\"wusong8899-user-submission.forum.item-header\")}\r\n          </span>\r\n        </div>\r\n        <div className=\"user-submission-input-container\">\r\n          <div \r\n            className=\"user-submission-input-container__overlay\"\r\n            onclick={this.handleInputClick.bind(this)}\r\n          />\r\n          <div className=\"user-submission-input-container__search-input Search-input\">\r\n            <input \r\n              disabled \r\n              className=\"FormControl\" \r\n              type=\"search\" \r\n              placeholder={app.translator.trans('wusong8899-user-submission.forum.item-input-placeholder')}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Setup dynamic widget injection with modern DOM manipulation\r\n   */\r\n  private setupDynamicWidget(): void {\r\n    const pollForContainer = setInterval(() => {\r\n      const container = document.querySelector(UserSubmissionWidget.CONTAINER_SELECTOR);\r\n      \r\n      if (container && !container.classList.contains(UserSubmissionWidget.WIDGET_CLASS)) {\r\n        clearInterval(pollForContainer);\r\n        this.injectWidgetAfterContainer(container);\r\n      }\r\n    }, UserSubmissionWidget.POLL_INTERVAL);\r\n\r\n    // Cleanup timer if component is removed\r\n    setTimeout(() => clearInterval(pollForContainer), 5000); // Max 5 seconds\r\n  }\r\n\r\n  /**\r\n   * Inject widget using modern DOM APIs and Mithril rendering\r\n   */\r\n  private injectWidgetAfterContainer(container: Element): void {\r\n    container.classList.add(UserSubmissionWidget.WIDGET_CLASS);\r\n    \r\n    // Create widget container\r\n    this.widgetElement = document.createElement('div');\r\n    this.widgetElement.className = 'user-submission-widget-dynamic';\r\n    \r\n    // Insert after container\r\n    container.parentNode?.insertBefore(this.widgetElement, container.nextSibling);\r\n    \r\n    // Render widget content using Mithril\r\n    m.render(this.widgetElement, this.renderWidgetContent());\r\n  }\r\n\r\n  /**\r\n   * Enhanced click handler with better error handling\r\n   */\r\n  private handleInputClick(): void {\r\n    try {\r\n      if (app.session.user) {\r\n        app.modal.show(UserSubmissionApplicationModal);\r\n      } else {\r\n        app.modal.show(LogInModal);\r\n      }\r\n    } catch {\r\n      // Silent error handling - could be logged to a service in production\r\n    }\r\n  }\r\n}\r\n","import Model from \"flarum/common/Model\";\r\nimport User from \"flarum/common/models/User\";\r\nimport { UserSubmissionAttributes, UserSubmissionReviewResult, UserSubmissionReviewStatus } from \"../../types\";\r\n\r\n/**\r\n * Enhanced UserSubmission Model with strict typing and modern Flarum patterns\r\n */\r\nexport default class UserSubmission extends Model<UserSubmissionAttributes> {\r\n  // Core attributes with strict types\r\n  declare id: () => string;\r\n  declare amount: () => number;\r\n  declare user_account: () => string;\r\n  declare submission_user_id: () => string;\r\n  declare review_user_id: () => string | null;\r\n  declare review_result: () => UserSubmissionReviewResult | null;\r\n  declare assigned_at: () => Date;\r\n  declare reviewed_at: () => Date | null;\r\n  declare created_at: () => Date;\r\n  declare updated_at: () => Date;\r\n\r\n  // Relationship accessors with proper typing\r\n  declare fromUser: () => User | false;\r\n  declare reviewUser: () => User | null | false;\r\n\r\n  /**\r\n   * Check if submission is pending review\r\n   */\r\n  isPending(): boolean {\r\n    return this.review_result() === null && this.review_user_id() === null;\r\n  }\r\n\r\n  /**\r\n   * Check if submission is approved\r\n   */\r\n  isApproved(): boolean {\r\n    return this.review_result() === 'approved';\r\n  }\r\n\r\n  /**\r\n   * Check if submission is rejected\r\n   */\r\n  isRejected(): boolean {\r\n    return this.review_result() === 'rejected';\r\n  }\r\n\r\n  /**\r\n   * Get review status as human-readable string\r\n   */\r\n  getReviewStatus(): UserSubmissionReviewStatus {\r\n    const result = this.review_result();\r\n    if (result === 'approved') return 'approved';\r\n    if (result === 'rejected') return 'rejected';\r\n    return 'pending';\r\n  }\r\n\r\n  /**\r\n   * Get formatted amount for display\r\n   */\r\n  getFormattedAmount(): string {\r\n    return this.amount().toFixed(2);\r\n  }\r\n\r\n  /**\r\n   * Check if submission can be edited\r\n   */\r\n  canEdit(): boolean {\r\n    return this.isPending();\r\n  }\r\n\r\n  /**\r\n   * Get time since submission\r\n   */\r\n  getTimeSinceSubmission(): number {\r\n    return Date.now() - this.created_at().getTime();\r\n  }\r\n}\r\n\r\n// Modern attribute and relationship definitions\r\nObject.assign(UserSubmission.prototype, {\r\n  id: Model.attribute(\"id\"),\r\n  amount: Model.attribute(\"amount\", Number),\r\n  user_account: Model.attribute(\"user_account\"),\r\n  submission_user_id: Model.attribute(\"submission_user_id\"),\r\n  review_user_id: Model.attribute(\"review_user_id\"),\r\n  review_result: Model.attribute(\"review_result\"),\r\n  assigned_at: Model.attribute(\"assigned_at\", Model.transformDate),\r\n  reviewed_at: Model.attribute(\"reviewed_at\", Model.transformDate),\r\n  created_at: Model.attribute(\"created_at\", Model.transformDate),\r\n  updated_at: Model.attribute(\"updated_at\", Model.transformDate),\r\n\r\n  // Relationships with proper naming for better clarity\r\n  fromUser: Model.hasOne(\"fromUser\"),\r\n  reviewUser: Model.hasOne(\"reviewUser\"),\r\n});\r\n","import app from 'flarum/forum/app';\r\nimport Component, { ComponentAttrs } from \"flarum/common/Component\";\r\nimport Button from 'flarum/common/components/Button';\r\nimport { UserSubmissionData } from \"../../types\";\r\n\r\ninterface UserSubmissionApplicationListItemAttrs extends ComponentAttrs {\r\n  itemData: UserSubmissionData;\r\n}\r\n\r\nexport default class UserSubmissionApplicationListItem extends Component<UserSubmissionApplicationListItemAttrs> {\r\n\r\n  view() {\r\n    const { itemData } = this.attrs;\r\n\r\n    const amount = itemData.amount();\r\n    const id = itemData.id();\r\n    const userAccount = itemData.user_account();\r\n    const reviewResult = itemData.review_result();\r\n    const reviewResultText = app.translator.trans(\r\n      reviewResult === 'approved'\r\n        ? 'wusong8899-user-submission.lib.list-submission-accept'\r\n        : 'wusong8899-user-submission.lib.list-submission-decline'\r\n    );\r\n    const assignedAt = itemData.assigned_at();\r\n    const reviewedAt = itemData.reviewed_at();\r\n    let containerClassName = \"userSubmissionApplicationContainer \";\r\n\r\n    if (reviewedAt === null) {\r\n      containerClassName += \"userSubmissionApplicationReviewing\";\r\n    } else {\r\n      if (reviewResult === 'approved') {\r\n        containerClassName += \"userSubmissionApplicationAccepted\";\r\n      } else {\r\n        containerClassName += \"userSubmissionApplicationDeclined\";\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className={containerClassName}>\r\n        <div>\r\n          <b>{app.translator.trans('wusong8899-user-submission.lib.list-id')}: </b>\r\n          {id}&nbsp;|&nbsp;\r\n          <b>{app.translator.trans('wusong8899-user-submission.lib.list-assignedAt')}: </b>\r\n          {assignedAt}\r\n        </div>\r\n        <div>\r\n          <b>{app.translator.trans('wusong8899-user-submission.lib.list-amount')}: </b>\r\n          {amount}&nbsp;|&nbsp;\r\n          <b>{app.translator.trans('wusong8899-user-submission.lib.list-userAccount')}: </b>\r\n          {userAccount}\r\n        </div>\r\n        {reviewedAt && (\r\n          <div>\r\n            <b>{app.translator.trans('wusong8899-user-submission.lib.list-reviewResult')}: </b>\r\n            {reviewResult === 'rejected' && (\r\n              <span className=\"user-submission-status user-submission-status--rejected\">{reviewResultText}&nbsp;|&nbsp;</span>\r\n            )}\r\n            {reviewResult === 'approved' && (\r\n              <span className=\"user-submission-status user-submission-status--approved\">{reviewResultText}&nbsp;|&nbsp;</span>\r\n            )}\r\n            <b>{app.translator.trans('wusong8899-user-submission.lib.list-reviewAt')}: </b>\r\n            {reviewedAt}\r\n          </div>\r\n        )}\r\n        {!reviewedAt && (\r\n          <div>\r\n            <b>{app.translator.trans('wusong8899-user-submission.lib.list-reviewResult')}: </b>\r\n            <span className=\"user-submission-status user-submission-status--reviewing\">{app.translator.trans('wusong8899-user-submission.lib.list-submission-reviewing')}</span>\r\n          </div>\r\n        )}\r\n        <div className=\"user-submission-actions\">\r\n          <Button\r\n            className=\"Button Button--danger Button--small\"\r\n            icon=\"fas fa-trash\"\r\n            onclick={() => this.deleteItem(itemData)}\r\n          >\r\n            {app.translator.trans('wusong8899-user-submission.forum.delete-submission')}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private deleteItem(itemData: UserSubmissionData): void {\r\n    if (confirm(app.translator.trans('wusong8899-user-submission.forum.confirm-delete'))) {\r\n      app.request({\r\n        method: 'DELETE',\r\n        url: app.forum.attribute('apiUrl') + '/userSubmissionList/' + itemData.id(),\r\n      })\r\n        .then(() => {\r\n          // Refresh the page or remove the item from the list\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          alert(app.translator.trans('wusong8899-user-submission.forum.delete-failed'));\r\n        });\r\n    }\r\n  }\r\n}\r\n","import Component, { ComponentAttrs } from \"flarum/common/Component\";\r\nimport LoadingIndicator from \"flarum/common/components/LoadingIndicator\";\r\nimport app from \"flarum/forum/app\";\r\nimport { UserSubmissionData } from \"../../types\";\r\nimport UserSubmissionApplicationListItem from \"./UserSubmissionApplicationListItem\";\r\nimport m from \"mithril\";\r\n\r\ninterface UserSubmissionApplicationListPageAttrs extends ComponentAttrs {\r\n  params: {\r\n    user: any;\r\n  };\r\n}\r\n\r\nexport default class UserSubmissionApplicationListPage extends Component<UserSubmissionApplicationListPageAttrs> {\r\n  private submissions: UserSubmissionData[] = [];\r\n  private loading = true;\r\n\r\n  oninit(vnode: any) {\r\n    super.oninit(vnode);\r\n    this.loadSubmissions();\r\n  }\r\n\r\n  view() {\r\n    return (\r\n      <div className=\"UserSubmissionApplicationList\">\r\n        {this.loading ? (\r\n          <LoadingIndicator size=\"large\" />\r\n        ) : (\r\n          <div className=\"UserSubmissionApplicationList-items\">\r\n            {this.submissions.length === 0 ? (\r\n              <div className=\"EmptyState\">\r\n                <p>{app.translator.trans('wusong8899-user-submission.forum.no_applications')}</p>\r\n              </div>\r\n            ) : (\r\n              this.submissions.map((submission) => \r\n                <UserSubmissionApplicationListItem \r\n                  key={submission.id()} \r\n                  itemData={submission} \r\n                />\r\n              )\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private async loadSubmissions(): Promise<void> {\r\n    try {\r\n      this.loading = true;\r\n      m.redraw();\r\n\r\n      // Load user's applications\r\n      const results = await app.store.find(\"userSubmissionApplicationList\", {\r\n        page: { limit: 50 }\r\n      });\r\n\r\n      // Handle the results\r\n      if (Array.isArray(results)) {\r\n        this.submissions = results as UserSubmissionData[];\r\n      } else if (results && (results as any).data) {\r\n        this.submissions = (results as any).data as UserSubmissionData[];\r\n      } else {\r\n        this.submissions = [];\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Failed to load user applications:', error);\r\n      this.submissions = [];\r\n    } finally {\r\n      this.loading = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n}\r\n","import app from 'flarum/forum/app';\r\nimport UserPage from \"flarum/forum/components/UserPage\";\r\nimport UserSubmissionApplicationListPage from \"./UserSubmissionApplicationListPage\";\r\n\r\nexport default class UserSubmissionApplicationPage extends UserPage {\r\n  oninit(vnode: any) {\r\n    super.oninit(vnode);\r\n    this.loadUser(m.route.param(\"username\"));\r\n  }\r\n\r\n  content() {\r\n    if (app.session.user) {\r\n      const currentUserID = app.session.user.id();\r\n      const targetUserID = this.user.id();\r\n\r\n      if (currentUserID === targetUserID) {\r\n        return (\r\n          <div>\r\n            <UserSubmissionApplicationListPage\r\n              params={{\r\n                user: this.user,\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import app from 'flarum/forum/app';\r\nimport { extend } from \"flarum/common/extend\";\r\nimport UserPage from \"flarum/forum/components/UserPage\";\r\nimport LinkButton from \"flarum/common/components/LinkButton\";\r\n\r\nimport UserSubmissionApplicationPage from './components/UserSubmissionApplicationPage';\r\n\r\nexport default function addUserPage(): void {\r\n  app.routes[\"user.userSubmissionApplication\"] = {\r\n    path: \"/u/:username/userSubmissionApplication\",\r\n    component: UserSubmissionApplicationPage,\r\n  };\r\n\r\n  extend(UserPage.prototype, \"navItems\", function (items) {\r\n    if (app.session.user) {\r\n      const currentUserID = app.session.user.id();\r\n      const targetUserID = this.user.id();\r\n\r\n      if (currentUserID === targetUserID) {\r\n        items.add(\r\n          \"userSubmissionApplication\",\r\n          <LinkButton\r\n            href={app.route(\"user.userSubmissionApplication\", {\r\n              username: this.user.username(),\r\n            })}\r\n            icon=\"fas fa-file-signature\"\r\n          >\r\n            {app.translator.trans(\r\n              \"wusong8899-user-submission.forum.application-list-title\"\r\n            )}\r\n          </LinkButton>,\r\n          10\r\n        );\r\n      }\r\n    }\r\n  });\r\n}\r\n","import app from 'flarum/forum/app';\r\nimport Notification from \"flarum/forum/components/Notification\";\r\n\r\nexport default class UserSubmissionNotification extends Notification {\r\n  icon(): null {\r\n    return null;\r\n  }\r\n\r\n  href(): string {\r\n    return app.route(\"user.userSubmissionApplication\", {\r\n      username: app.session.user.username(),\r\n    });\r\n  }\r\n\r\n  content(): string {\r\n    this.attrs.notification.subject();\r\n    return app.translator.trans('wusong8899-user-submission.forum.notification-submission-result-title');\r\n  }\r\n\r\n  excerpt(): string | undefined {\r\n    const notification = this.attrs.notification.subject();\r\n    const reviewResult = notification.review_result();\r\n    const submissionId = notification.id();\r\n\r\n    if (reviewResult === 'approved') {\r\n      return app.translator.trans('wusong8899-user-submission.forum.notification-submission-result-success', { id: submissionId });\r\n    } else if (reviewResult === 'rejected') {\r\n      return app.translator.trans('wusong8899-user-submission.forum.notification-submission-result-failed', { id: submissionId });\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n}\r\n","import app from 'flarum/forum/app';\r\nimport Page from 'flarum/common/components/Page';\r\nimport IndexPage from 'flarum/forum/components/IndexPage';\r\nimport listItems from 'flarum/common/helpers/listItems';\r\n\r\nimport UserSubmissionApplicationModal from './UserSubmissionApplicationModal';\r\nimport LogInModal from \"flarum/forum/components/LogInModal\";\r\n\r\nexport default class UserSubmissionIndexPage extends Page {\r\n  oninit(vnode: any) {\r\n    super.oninit(vnode);\r\n  }\r\n\r\n  view() {\r\n    return (\r\n      <div className=\"MoneyLeaderboardPage\">\r\n        {IndexPage.prototype.hero()}\r\n\r\n        <div className=\"container\">\r\n          <div className=\"sideNavContainer\">\r\n            <nav className=\"IndexPage-nav sideNav\">\r\n              <ul>{listItems(IndexPage.prototype.sidebarItems().toArray())}</ul>\r\n            </nav>\r\n            <div className=\"user-submission-header\">\r\n              <img\r\n                className=\"user-submission-icon\"\r\n                src=\"https://mutluresim.com/images/2023/03/26/ViOux.png\"\r\n                alt=\"User Submission\"\r\n              />\r\n              &nbsp;{app.translator.trans(\"wusong8899-user-submission.forum.item-header\")}\r\n            </div>\r\n            <div className=\"user-submission-input-container\">\r\n              <div\r\n                className=\"user-submission-input-overlay\"\r\n                onclick={() => this.openModal()}\r\n              />\r\n              <div className=\"Search-input\">\r\n                <input\r\n                  disabled\r\n                  className=\"FormControl\"\r\n                  type=\"search\"\r\n                  placeholder={app.translator.trans('wusong8899-user-submission.forum.item-input-placeholder')}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private openModal(): void {\r\n    if (app.session.user) {\r\n      app.modal.show(UserSubmissionApplicationModal);\r\n    } else {\r\n      app.modal.show(LogInModal);\r\n    }\r\n  }\r\n}\r\n","import app from 'flarum/forum/app';\r\nimport { extend } from 'flarum/common/extend';\r\nimport NotificationGrid from \"flarum/forum/components/NotificationGrid\";\r\nimport HeaderPrimary from 'flarum/forum/components/HeaderPrimary';\r\nimport UserSubmissionWidget from './components/UserSubmissionWidget';\r\n\r\nimport UserSubmission from \"./model/UserSubmission\";\r\nimport addUserPage from './addUserPage';\r\nimport UserSubmissionNotification from \"./components/UserSubmissionNotification\";\r\nimport UserSubmissionIndexPage from './components/UserSubmissionIndexPage';\r\n\r\napp.initializers.add('wusong8899-user-submission', () => {\r\n  app.routes['userSubmission'] = {\r\n    path: '/userSubmission',\r\n    component: UserSubmissionIndexPage,\r\n  };\r\n\r\n  app.store.models.userSubmissionList = UserSubmission;\r\n  app.notificationComponents.userSubmissionList = UserSubmissionNotification;\r\n\r\n  extend(HeaderPrimary.prototype, 'view', function () {\r\n    const routeName = app.current.get('routeName');\r\n\r\n    if (routeName === 'tags') {\r\n      // Initialize the user submission widget for the tags page\r\n      const widget = new UserSubmissionWidget();\r\n      widget.oncreate({});\r\n    }\r\n  });\r\n\r\n  extend(NotificationGrid.prototype, \"notificationTypes\", function (items) {\r\n    items.add(\"userSubmissionList\", {\r\n      name: \"userSubmissionList\",\r\n      icon: \"fas fa-file-signature\",\r\n      label: app.translator.trans(\r\n        \"wusong8899-user-submission.forum.notification-submission-result\"\r\n      ),\r\n    });\r\n  });\r\n\r\n  addUserPage();\r\n});\r\n\r\n"],"names":["_UserSubmissionApplicationSubmitSuccessModal","Modal","app","Button","UserSubmissionApplicationSubmitSuccessModal","USER_SUBMISSION_CONSTANTS","BASE_ENDPOINT","MAX_RETRIES","RETRY_DELAY","createUserSubmission","payload","validationErrors","validateCreatePayload","err","response","requestWithRetry","processCreateResponse","error","handleApiError","errors","VALIDATION_RULES","ERROR_CODES","method","url","data","retryCount","shouldRetry","delay","ms","resolve","defaultMessage","validationMessages","_UserSubmissionApplicationModal","vnode","Stream","m","e","UserSubmissionApplicationModal","_UserSubmissionWidget","Component","pollForContainer","container","LogInModal","UserSubmissionWidget","UserSubmission","Model","result","UserSubmissionApplicationListItem","itemData","amount","id","userAccount","reviewResult","reviewResultText","assignedAt","reviewedAt","containerClassName","UserSubmissionApplicationListPage","LoadingIndicator","submission","results","UserSubmissionApplicationPage","UserPage","currentUserID","targetUserID","addUserPage","extend","items","LinkButton","UserSubmissionNotification","Notification","notification","submissionId","UserSubmissionIndexPage","Page","IndexPage","listItems","HeaderPrimary","NotificationGrid"],"mappings":"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"}